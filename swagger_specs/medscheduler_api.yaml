openapi: 3.0.3
info:
  title: MedScheduler API
  description: |
    API simple et directe pour la gestion des rendez-vous médicaux et des patients.

    ## Authentification
    Cette API utilise une clé API simple via le header `X-API-Key`.

    ## Fonctionnalités
    - Gestion des patients
    - Gestion des rendez-vous médicaux
    - Format JSON simple et direct

  version: 1.0.0
  contact:
    name: MedScheduler Support
    email: support@medscheduler.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5001
    description: Serveur de développement
  - url: https://medscheduler-api-[REPLACE-WITH-YOUR-HASH].onrender.com
    description: Serveur de production

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Vérification de santé de l'API
      description: Endpoint pour vérifier que l'API fonctionne correctement
      tags:
        - Health
      security: []
      responses:
        "200":
          description: API opérationnelle
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  api:
                    type: string
                    example: MedScheduler
                  version:
                    type: string
                    example: 1.0.0
                  timestamp:
                    type: string
                    format: date-time
                    example: 2024-03-20T10:30:00Z

  /patients:
    get:
      summary: Récupérer tous les patients
      description: Retourne la liste complète des patients enregistrés
      tags:
        - Patients
      responses:
        "200":
          description: Liste des patients récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  patients:
                    type: array
                    items:
                      $ref: "#/components/schemas/Patient"
                  total:
                    type: integer
                    example: 2
        "401":
          $ref: "#/components/responses/UnauthorizedError"

    post:
      summary: Créer un nouveau patient
      description: Ajoute un nouveau patient au système
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientCreate"
      responses:
        "201":
          description: Patient créé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /patients/{patient_id}:
    get:
      summary: Récupérer un patient spécifique
      description: Retourne les informations détaillées d'un patient
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Identifiant unique du patient
          schema:
            type: string
            example: pat_001
      responses:
        "200":
          description: Patient trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "404":
          description: Patient non trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /appointments:
    get:
      summary: Récupérer tous les rendez-vous
      description: Retourne la liste des rendez-vous, avec filtrage optionnel par date
      tags:
        - Rendez-vous
      parameters:
        - name: date
          in: query
          required: false
          description: Filtrer par date (format YYYY-MM-DD)
          schema:
            type: string
            format: date
            example: 2024-03-20
      responses:
        "200":
          description: Liste des rendez-vous récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Appointment"
                  total:
                    type: integer
                    example: 2
        "401":
          $ref: "#/components/responses/UnauthorizedError"

    post:
      summary: Créer un nouveau rendez-vous
      description: Ajoute un nouveau rendez-vous au système
      tags:
        - Rendez-vous
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppointmentCreate"
      responses:
        "201":
          description: Rendez-vous créé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "400":
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /appointments/{appointment_id}:
    get:
      summary: Récupérer un rendez-vous spécifique
      description: Retourne les informations détaillées d'un rendez-vous
      tags:
        - Rendez-vous
      parameters:
        - name: appointment_id
          in: path
          required: true
          description: Identifiant unique du rendez-vous
          schema:
            type: string
            example: apt_001
      responses:
        "200":
          description: Rendez-vous trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "404":
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

    put:
      summary: Mettre à jour un rendez-vous
      description: Modifie les informations d'un rendez-vous existant
      tags:
        - Rendez-vous
      parameters:
        - name: appointment_id
          in: path
          required: true
          description: Identifiant unique du rendez-vous
          schema:
            type: string
            example: apt_001
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppointmentUpdate"
      responses:
        "200":
          description: Rendez-vous mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "404":
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: "Clé API pour l'authentification (valeur par défaut: medscheduler_key_12345)"

  responses:
    UnauthorizedError:
      description: Clé API manquante ou invalide
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Patient:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du patient
          example: pat_001
        first_name:
          type: string
          description: Prénom du patient
          example: Jean
        last_name:
          type: string
          description: Nom de famille du patient
          example: Dupont
        birth_date:
          type: string
          format: date
          description: Date de naissance
          example: 1985-03-15
        phone:
          type: string
          description: Numéro de téléphone
          example: +33123456789
        email:
          type: string
          format: email
          description: Adresse email
          example: jean.dupont@email.com
        address:
          type: string
          description: Adresse complète
          example: 123 Rue de la Santé, 75014 Paris
        created_at:
          type: string
          format: date-time
          description: Date de création du dossier
          example: 2024-01-15T10:30:00Z

    PatientCreate:
      type: object
      required:
        - first_name
        - last_name
        - birth_date
        - phone
      properties:
        first_name:
          type: string
          description: Prénom du patient
          example: Jean
        last_name:
          type: string
          description: Nom de famille du patient
          example: Dupont
        birth_date:
          type: string
          format: date
          description: Date de naissance
          example: 1985-03-15
        phone:
          type: string
          description: Numéro de téléphone
          example: +33123456789
        email:
          type: string
          format: email
          description: Adresse email (optionnel)
          example: jean.dupont@email.com
        address:
          type: string
          description: Adresse complète (optionnel)
          example: 123 Rue de la Santé, 75014 Paris

    Appointment:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du rendez-vous
          example: apt_001
        patient_id:
          type: string
          description: Identifiant du patient
          example: pat_001
        doctor_name:
          type: string
          description: Nom du médecin
          example: Dr. Leblanc
        appointment_date:
          type: string
          format: date
          description: Date du rendez-vous
          example: 2024-03-20
        appointment_time:
          type: string
          description: Heure du rendez-vous
          example: "14:30"
        duration_minutes:
          type: integer
          description: Durée en minutes
          example: 30
        type:
          type: string
          description: Type de consultation
          enum: [consultation, specialist, emergency, followup]
          example: consultation
        status:
          type: string
          description: Statut du rendez-vous
          enum: [scheduled, confirmed, completed, cancelled]
          example: scheduled
        notes:
          type: string
          description: Notes additionnelles
          example: Consultation de routine
        created_at:
          type: string
          format: date-time
          description: Date de création
          example: 2024-01-15T11:00:00Z

    AppointmentCreate:
      type: object
      required:
        - patient_id
        - doctor_name
        - appointment_date
        - appointment_time
      properties:
        patient_id:
          type: string
          description: Identifiant du patient
          example: pat_001
        doctor_name:
          type: string
          description: Nom du médecin
          example: Dr. Leblanc
        appointment_date:
          type: string
          format: date
          description: Date du rendez-vous
          example: 2024-03-20
        appointment_time:
          type: string
          description: Heure du rendez-vous
          example: "14:30"
        duration_minutes:
          type: integer
          description: "Durée en minutes (optionnel, défaut: 30)"
          example: 30
        type:
          type: string
          description: "Type de consultation (optionnel, défaut: consultation)"
          enum: [consultation, specialist, emergency, followup]
          example: consultation
        status:
          type: string
          description: "Statut du rendez-vous (optionnel, défaut: scheduled)"
          enum: [scheduled, confirmed, completed, cancelled]
          example: scheduled
        notes:
          type: string
          description: "Notes additionnelles (optionnel)"
          example: Consultation de routine

    AppointmentUpdate:
      type: object
      properties:
        doctor_name:
          type: string
          description: Nom du médecin
          example: Dr. Leblanc
        appointment_date:
          type: string
          format: date
          description: Date du rendez-vous
          example: 2024-03-20
        appointment_time:
          type: string
          description: Heure du rendez-vous
          example: "14:30"
        duration_minutes:
          type: integer
          description: Durée en minutes
          example: 30
        type:
          type: string
          description: Type de consultation
          enum: [consultation, specialist, emergency, followup]
          example: consultation
        status:
          type: string
          description: Statut du rendez-vous
          enum: [scheduled, confirmed, completed, cancelled]
          example: confirmed
        notes:
          type: string
          description: Notes additionnelles
          example: Consultation de routine

    Error:
      type: object
      properties:
        error:
          type: string
          description: Message d'erreur
          example: Invalid or missing API key

tags:
  - name: Health
    description: Endpoints de santé et statut de l'API
  - name: Patients
    description: Gestion des patients
  - name: Rendez-vous
    description: Gestion des rendez-vous médicaux
